<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="moore06.cs.purdue.edu" name="miniscala.test.CMScalaToCPS_Whitebox_Tail" tests="1" errors="0" failures="1" skipped="0" time="0.304" timestamp="2020-02-12T17:19:38">
                     <properties>
      <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/><property name="java.specification.version" value="11"/><property name="sun.cpu.isalist" value=""/><property name="sun.jnu.encoding" value="UTF-8"/><property name="sun.arch.data.model" value="64"/><property name="java.vendor.url" value="Unknown"/><property name="sun.boot.library.path" value="/usr/lib/jvm/java-11-openjdk-amd64/lib"/><property name="sun.java.command" value="/usr/share/sbt/bin/sbt-launch.jar test"/><property name="jdk.debug" value="release"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="java.version.date" value="2019-10-15"/><property name="java.home" value="/usr/lib/jvm/java-11-openjdk-amd64"/><property name="file.separator" value="/"/><property name="java.vm.compressedOopsMode" value="32-bit"/><property name="line.separator" value="
"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="java.runtime.version" value="11.0.5+10-post-Ubuntu-0ubuntu1.118.04"/><property name="user.name" value="won20"/><property name="file.encoding" value="UTF-8"/><property name="jnidispatch.path" value="/tmp/jna-113313108/jna7526630742114311036.tmp"/><property name="jna.loaded" value="true"/><property name="java.io.tmpdir" value="/tmp"/><property name="java.version" value="11.0.5"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/><property name="sun.os.patch.level" value="unknown"/><property name="java.library.path" value="/p/oracle12c::/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/><property name="java.vendor" value="Private Build"/><property name="scala.ext.dirs" value="/homes/won20/.sbt/0.13/java9-rt-ext-private_build_11_0_5"/><property name="sun.io.unicode.encoding" value="UnicodeLittle"/><property name="java.class.path" value="/usr/share/sbt/bin/sbt-launch.jar"/><property name="java.vm.vendor" value="Private Build"/><property name="jline.shutdownhook" value="false"/><property name="user.timezone" value="America/Indiana/Indianapolis"/><property name="os.name" value="Linux"/><property name="java.vm.specification.version" value="11"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="user.country" value="US"/><property name="sun.cpu.endian" value="little"/><property name="user.home" value="/homes/won20"/><property name="user.language" value="en"/><property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/><property name="jline.esc.timeout" value="0"/><property name="path.separator" value=":"/><property name="os.version" value="4.15.0-72-generic"/><property name="jna.nosys" value="true"/><property name="java.runtime.name" value="OpenJDK Runtime Environment"/><property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/><property name="jna.platform.library.path" value="/usr/lib/x86_64-linux-gnu:/lib/x86_64-linux-gnu:/lib64:/usr/lib:/lib:/libx32:/lib/i386-linux-gnu:/lib32:/usr/libx32:/usr/lib32:/opt/oracle/instantclient_12_2"/><property name="java.vendor.url.bug" value="Unknown"/><property name="user.dir" value="/u/riker/u87/won20/cs352/proj4/compiler"/><property name="os.arch" value="amd64"/><property name="java.vm.info" value="mixed mode, sharing"/><property name="java.vm.version" value="11.0.5+10-post-Ubuntu-0ubuntu1.118.04"/><property name="java.class.version" value="55.0"/>
    </properties>
                     <testcase classname="miniscala.test.CMScalaToCPS_Whitebox_Tail" name="testTailUselessContinuations" time="0.304">
                                                 <failure message="scala.MatchError: LetRec(List(FunDef(f,List(),List(Arg(g,() =&gt; Int,pos)),Int,App(Ref(g),List(),List()))),Lit(1)) (of class miniscala.CMScalaTreeModule$LetRec)" type="sbt.ForkMain$ForkError">sbt.ForkMain$ForkError: scala.MatchError: LetRec(List(FunDef(f,List(),List(Arg(g,() =&gt; Int,pos)),Int,App(Ref(g),List(),List()))),Lit(1)) (of class miniscala.CMScalaTreeModule$LetRec)
	at miniscala.CMScalaToCPSTranslator$.nonTail(CMScalaToCPSTranslator.scala:16)
	at miniscala.CMScalaToCPSTranslator$.apply(CMScalaToCPSTranslator.scala:11)
	at miniscala.CMScalaToCPSTranslator$.apply(CMScalaToCPSTranslator.scala:6)
	at scala.Function1.$anonfun$andThen$1(Function1.scala:57)
	at scala.Function1.$anonfun$andThen$1(Function1.scala:57)
	at miniscala.test.infrastructure.CompilerTest.compileInner(CompilerTest.scala:37)
	at miniscala.test.infrastructure.CompilerTest.$anonfun$compileUsingPipeline$1(CompilerTest.scala:41)
	at miniscala.test.infrastructure.SandboxedTest$$anon$1.run(SandboxedTest.scala:24)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at miniscala.test.infrastructure.SandboxedTest.sandboxedTest(SandboxedTest.scala:34)
	at miniscala.test.infrastructure.CompilerTest.compileUsingPipeline(CompilerTest.scala:41)
	at miniscala.test.infrastructure.CompilerTest.compileUsingPipeline$(CompilerTest.scala:40)
	at miniscala.test.infrastructure.CPSTest.compileUsingPipeline(CPSTest.scala:11)
	at miniscala.test.infrastructure.CPSHighTest.testCPSHighTreeEquality(CPSHighTest.scala:23)
	at miniscala.test.CMScalaToCPS_Whitebox_Tail.testTailUselessContinuations(CMScalaToCPS_Whitebox_Tail.scala:8)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.novocode.junit.JUnitRunner$1.execute(JUnitRunner.java:132)
	at sbt.ForkMain$Run.lambda$runTest$1(ForkMain.java:304)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
</failure>
                                               </testcase>
                     <system-out><![CDATA[]]></system-out>
                     <system-err><![CDATA[]]></system-err>
                   </testsuite>